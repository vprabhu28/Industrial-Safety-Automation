<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [..\UART.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image ..\UART.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, RVCT4.0 [Build 728]: Last Updated: Wed May 03 19:25:25 2017
<BR><P>
<H3>Maximum Stack Usage =        164 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; VOLTAGE_CHECK &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[d6d658]">Reset_Handler</a>
 <LI><a href="#[d6d8b0]">Undef_Handler</a>
 <LI><a href="#[d6d874]">SWI_Handler</a>
 <LI><a href="#[d6d838]">PAbt_Handler</a>
 <LI><a href="#[d6d7fc]">DAbt_Handler</a>
 <LI><a href="#[d6d7c0]">IRQ_Handler</a>
 <LI><a href="#[d6d784]">FIQ_Handler</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[d6d8b0]">Undef_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[d6d8b0]">Undef_Handler</a><BR>
 <LI><a href="#[d6d874]">SWI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[d6d874]">SWI_Handler</a><BR>
 <LI><a href="#[d6d838]">PAbt_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[d6d838]">PAbt_Handler</a><BR>
 <LI><a href="#[d6d7fc]">DAbt_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[d6d7fc]">DAbt_Handler</a><BR>
 <LI><a href="#[d6d7c0]">IRQ_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[d6d7c0]">IRQ_Handler</a><BR>
 <LI><a href="#[d6d784]">FIQ_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[d6d784]">FIQ_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[d6d658]">Reset_Handler</a>
 <LI><a href="#[d6d8b0]">Undef_Handler</a>
 <LI><a href="#[d6d874]">SWI_Handler</a>
 <LI><a href="#[d6d838]">PAbt_Handler</a>
 <LI><a href="#[d6d7fc]">DAbt_Handler</a>
 <LI><a href="#[d6d7c0]">IRQ_Handler</a>
 <LI><a href="#[d6d784]">FIQ_Handler</a>
 <LI><a href="#[d698f0]">__main</a>
 <LI><a href="#[d69d64]">main</a>
 <LI><a href="#[d612a4]">_sputc</a>
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[d6d658]"></a>Reset_Handler</STRONG> (ARM, 0 bytes, Stack size unknown bytes, startup.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[d698f0]"></a>__main</STRONG> (ARM, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))

<P><STRONG><a name="[d5f774]"></a>_main_stk</STRONG> (ARM, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[d5f684]"></a>_main_scatterload</STRONG> (ARM, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[145f43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[d5f648]"></a>__main_after_scatterload</STRONG> (ARM, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[145f43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[d5f558]"></a>_main_init</STRONG> (ARM, 0 bytes, Stack size unknown bytes, entry7.o(.ARM.Collect$$$$00000007))

<P><STRONG><a name="[d6ca64]"></a>UART0Handler</STRONG> (ARM, 384 bytes, Stack size 24 bytes, uart.o(.text), UNUSED)

<P><STRONG><a name="[d6ca28]"></a>UART1Handler</STRONG> (ARM, 384 bytes, Stack size 24 bytes, uart.o(.text), UNUSED)

<P><STRONG><a name="[d6c9ec]"></a>UARTInit</STRONG> (ARM, 296 bytes, Stack size 16 bytes, uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = UARTInit &rArr; install_irq
</UL>
<BR>[Calls]<UL><LI><a href="#[d6c974]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;install_irq
</UL>
<BR>[Called By]<UL><LI><a href="#[d69d64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d6c9b0]"></a>UARTSend</STRONG> (ARM, 172 bytes, Stack size 0 bytes, uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d69e54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEMP_MONITOR
</UL>

<P><STRONG><a name="[d6c44c]"></a>DefaultVICHandler</STRONG> (ARM, 20 bytes, Stack size 8 bytes, irq.o(.text), UNUSED)

<P><STRONG><a name="[d6c410]"></a>init_VIC</STRONG> (ARM, 92 bytes, Stack size 0 bytes, irq.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d69d64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d6c974]"></a>install_irq</STRONG> (ARM, 132 bytes, Stack size 12 bytes, irq.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = install_irq
</UL>
<BR>[Called By]<UL><LI><a href="#[d6c9ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTInit
</UL>

<P><STRONG><a name="[d6c3d4]"></a>uninstall_irq</STRONG> (ARM, 144 bytes, Stack size 8 bytes, irq.o(.text), UNUSED)

<P><STRONG><a name="[d6bf60]"></a>delay</STRONG> (ARM, 56 bytes, Stack size 0 bytes, lcd.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d69d64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[d69da0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAS_CHECK
<LI><a href="#[d69ddc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIRE_CHECK
<LI><a href="#[d69e18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VOLTAGE_CHECK
<LI><a href="#[d69e54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEMP_MONITOR
<LI><a href="#[d69e90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;intWIFI
<LI><a href="#[d6b2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;intGsm
<LI><a href="#[d6bd80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_lcd
<LI><a href="#[d6bee8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_command_write
<LI><a href="#[d6bf24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wait_lcd
</UL>

<P><STRONG><a name="[d6bf24]"></a>wait_lcd</STRONG> (ARM, 124 bytes, Stack size 4 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = wait_lcd
</UL>
<BR>[Calls]<UL><LI><a href="#[d6bf60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
</UL>
<BR>[Called By]<UL><LI><a href="#[d6be34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_data_write
<LI><a href="#[d6bee8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_command_write
</UL>

<P><STRONG><a name="[d6bee8]"></a>lcd_command_write</STRONG> (ARM, 212 bytes, Stack size 16 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = lcd_command_write &rArr; wait_lcd
</UL>
<BR>[Calls]<UL><LI><a href="#[d6bf24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wait_lcd
<LI><a href="#[d6bf60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
</UL>
<BR>[Called By]<UL><LI><a href="#[d69d64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[d69e90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;intWIFI
<LI><a href="#[d6bd08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear
<LI><a href="#[d6bd44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_cmd
<LI><a href="#[d6bd80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_lcd
<LI><a href="#[d6be70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_gotoxy
</UL>

<P><STRONG><a name="[d6beac]"></a>set_lcd_port_output</STRONG> (ARM, 56 bytes, Stack size 0 bytes, lcd.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d6bd80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_lcd
</UL>

<P><STRONG><a name="[d6be70]"></a>lcd_gotoxy</STRONG> (ARM, 92 bytes, Stack size 16 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = lcd_gotoxy &rArr; lcd_command_write &rArr; wait_lcd
</UL>
<BR>[Calls]<UL><LI><a href="#[d6bee8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_command_write
</UL>
<BR>[Called By]<UL><LI><a href="#[d6bdbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_putstring
</UL>

<P><STRONG><a name="[d6be34]"></a>lcd_data_write</STRONG> (ARM, 160 bytes, Stack size 16 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = lcd_data_write &rArr; wait_lcd
</UL>
<BR>[Calls]<UL><LI><a href="#[d6bf24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wait_lcd
</UL>
<BR>[Called By]<UL><LI><a href="#[d6a034]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;putSLcd
<LI><a href="#[d6bdf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_putchar
</UL>

<P><STRONG><a name="[d6bdf8]"></a>lcd_putchar</STRONG> (ARM, 20 bytes, Stack size 8 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = lcd_putchar &rArr; lcd_data_write &rArr; wait_lcd
</UL>
<BR>[Calls]<UL><LI><a href="#[d6be34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_data_write
</UL>
<BR>[Called By]<UL><LI><a href="#[d6bdbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_putstring
</UL>

<P><STRONG><a name="[d6bdbc]"></a>lcd_putstring</STRONG> (ARM, 80 bytes, Stack size 20 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = lcd_putstring &rArr; lcd_gotoxy &rArr; lcd_command_write &rArr; wait_lcd
</UL>
<BR>[Calls]<UL><LI><a href="#[d6bdf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_putchar
<LI><a href="#[d6be70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_gotoxy
</UL>
<BR>[Called By]<UL><LI><a href="#[d69d64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[d69da0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAS_CHECK
<LI><a href="#[d69ddc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIRE_CHECK
<LI><a href="#[d69e18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VOLTAGE_CHECK
<LI><a href="#[d69e54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEMP_MONITOR
<LI><a href="#[d6b2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;intGsm
</UL>

<P><STRONG><a name="[d6bd80]"></a>init_lcd</STRONG> (ARM, 60 bytes, Stack size 4 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = init_lcd &rArr; lcd_command_write &rArr; wait_lcd
</UL>
<BR>[Calls]<UL><LI><a href="#[d6beac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_lcd_port_output
<LI><a href="#[d6bee8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_command_write
<LI><a href="#[d6bf60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
</UL>
<BR>[Called By]<UL><LI><a href="#[d69d64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d6bd44]"></a>test_cmd</STRONG> (ARM, 56 bytes, Stack size 4 bytes, lcd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d6bee8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_command_write
</UL>

<P><STRONG><a name="[d6bd08]"></a>clear</STRONG> (ARM, 16 bytes, Stack size 4 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = clear &rArr; lcd_command_write &rArr; wait_lcd
</UL>
<BR>[Calls]<UL><LI><a href="#[d6bee8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_command_write
</UL>
<BR>[Called By]<UL><LI><a href="#[d69d64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[d69e18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VOLTAGE_CHECK
</UL>

<P><STRONG><a name="[d6b984]"></a>sendchar</STRONG> (ARM, 80 bytes, Stack size 0 bytes, serial.o(.text), UNUSED)

<P><STRONG><a name="[d6b948]"></a>uart0_getkey</STRONG> (ARM, 32 bytes, Stack size 0 bytes, serial.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d6b27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getSMS
<LI><a href="#[d6b2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendSMS
<LI><a href="#[d6b330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;recvResponse_1
</UL>

<P><STRONG><a name="[d6b90c]"></a>uart1_getkey</STRONG> (ARM, 32 bytes, Stack size 0 bytes, serial.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[d69ecc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Receive_Data
<LI><a href="#[d69f08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;recvResponse_DATA
<LI><a href="#[d69f44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIFI_RECEIVE_IP
<LI><a href="#[d69f80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIFI_CONNECT_Response
<LI><a href="#[d69fbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;recvResponse
<LI><a href="#[d69ff8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;recvResponse123
</UL>

<P><STRONG><a name="[d6b8d0]"></a>uart1_init</STRONG> (ARM, 52 bytes, Stack size 0 bytes, serial.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d69d64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d6b894]"></a>uart1_putc</STRONG> (ARM, 32 bytes, Stack size 0 bytes, serial.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[d69e90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;intWIFI
<LI><a href="#[d6b858]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_puts
</UL>

<P><STRONG><a name="[d6b858]"></a>uart1_puts</STRONG> (ARM, 36 bytes, Stack size 4 bytes, serial.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d6b894]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_putc
</UL>
<BR>[Called By]<UL><LI><a href="#[d69e90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;intWIFI
</UL>

<P><STRONG><a name="[d6b81c]"></a>uart0_init</STRONG> (ARM, 52 bytes, Stack size 0 bytes, serial.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d69d64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d6b7e0]"></a>uart0_putc</STRONG> (ARM, 32 bytes, Stack size 0 bytes, serial.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d6b2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendSMS
<LI><a href="#[d6b2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;intGsm
<LI><a href="#[d6b7a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_puts
</UL>

<P><STRONG><a name="[d6b7a4]"></a>uart0_puts</STRONG> (ARM, 36 bytes, Stack size 4 bytes, serial.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = uart0_puts
</UL>
<BR>[Calls]<UL><LI><a href="#[d6b7e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_putc
</UL>
<BR>[Called By]<UL><LI><a href="#[d6b240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;deleteSms
<LI><a href="#[d6b27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getSMS
<LI><a href="#[d6b2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendSMS
<LI><a href="#[d6b2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;intGsm
</UL>

<P><STRONG><a name="[d6b330]"></a>recvResponse_1</STRONG> (ARM, 64 bytes, Stack size 16 bytes, gsm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = recvResponse_1
</UL>
<BR>[Calls]<UL><LI><a href="#[d6b948]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_getkey
</UL>
<BR>[Called By]<UL><LI><a href="#[d6b240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;deleteSms
<LI><a href="#[d6b2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendSMS
<LI><a href="#[d6b2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;intGsm
</UL>

<P><STRONG><a name="[d6b2f4]"></a>intGsm</STRONG> (ARM, 152 bytes, Stack size 16 bytes, gsm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = intGsm &rArr; lcd_putstring &rArr; lcd_gotoxy &rArr; lcd_command_write &rArr; wait_lcd
</UL>
<BR>[Calls]<UL><LI><a href="#[d6b330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;recvResponse_1
<LI><a href="#[d6b7a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_puts
<LI><a href="#[d6b7e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_putc
<LI><a href="#[d6bdbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_putstring
<LI><a href="#[d6bf60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
</UL>
<BR>[Called By]<UL><LI><a href="#[d69d64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d6b2b8]"></a>sendSMS</STRONG> (ARM, 192 bytes, Stack size 32 bytes, gsm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = sendSMS &rArr; recvResponse_1
</UL>
<BR>[Calls]<UL><LI><a href="#[d6b330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;recvResponse_1
<LI><a href="#[d6b7a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_puts
<LI><a href="#[d6b7e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_putc
<LI><a href="#[d6b948]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_getkey
</UL>
<BR>[Called By]<UL><LI><a href="#[d69d64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[d69da0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAS_CHECK
<LI><a href="#[d69ddc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIRE_CHECK
<LI><a href="#[d69e18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VOLTAGE_CHECK
<LI><a href="#[d69e54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEMP_MONITOR
</UL>

<P><STRONG><a name="[d6b27c]"></a>getSMS</STRONG> (ARM, 676 bytes, Stack size 16 bytes, gsm.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d6b7a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_puts
<LI><a href="#[d6b948]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_getkey
</UL>

<P><STRONG><a name="[d6b240]"></a>deleteSms</STRONG> (ARM, 48 bytes, Stack size 24 bytes, gsm.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d6b330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;recvResponse_1
<LI><a href="#[d6b7a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_puts
</UL>

<P><STRONG><a name="[d6adcc]"></a>init_adc0</STRONG> (ARM, 68 bytes, Stack size 0 bytes, adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d69d64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d6ad90]"></a>init_adc1</STRONG> (ARM, 4 bytes, Stack size 0 bytes, adc.o(.text), UNUSED)

<P><STRONG><a name="[d6ad54]"></a>adc_read</STRONG> (ARM, 180 bytes, Stack size 0 bytes, adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d69e18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VOLTAGE_CHECK
<LI><a href="#[d69e54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEMP_MONITOR
</UL>

<P><STRONG><a name="[d6a034]"></a>putSLcd</STRONG> (ARM, 36 bytes, Stack size 8 bytes, main.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d6be34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_data_write
</UL>
<BR>[Called By]<UL><LI><a href="#[d69e90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;intWIFI
</UL>

<P><STRONG><a name="[d69ff8]"></a>recvResponse123</STRONG> (ARM, 60 bytes, Stack size 16 bytes, main.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d6b90c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_getkey
</UL>

<P><STRONG><a name="[d69fbc]"></a>recvResponse</STRONG> (ARM, 76 bytes, Stack size 16 bytes, main.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d6b90c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_getkey
</UL>
<BR>[Called By]<UL><LI><a href="#[d69e90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;intWIFI
</UL>

<P><STRONG><a name="[d69f80]"></a>WIFI_CONNECT_Response</STRONG> (ARM, 60 bytes, Stack size 16 bytes, main.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d6b90c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_getkey
</UL>

<P><STRONG><a name="[d69f44]"></a>WIFI_RECEIVE_IP</STRONG> (ARM, 60 bytes, Stack size 16 bytes, main.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d6b90c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_getkey
</UL>
<BR>[Called By]<UL><LI><a href="#[d69e90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;intWIFI
</UL>

<P><STRONG><a name="[d69f08]"></a>recvResponse_DATA</STRONG> (ARM, 60 bytes, Stack size 16 bytes, main.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d6b90c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_getkey
</UL>

<P><STRONG><a name="[d69ecc]"></a>Receive_Data</STRONG> (ARM, 84 bytes, Stack size 16 bytes, main.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d6b90c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_getkey
</UL>

<P><STRONG><a name="[d69e90]"></a>intWIFI</STRONG> (ARM, 400 bytes, Stack size 64 bytes, main.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d69f44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIFI_RECEIVE_IP
<LI><a href="#[d69fbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;recvResponse
<LI><a href="#[d6a034]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;putSLcd
<LI><a href="#[d6b858]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_puts
<LI><a href="#[d6b894]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_putc
<LI><a href="#[d6bee8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_command_write
<LI><a href="#[d6bf60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
</UL>

<P><STRONG><a name="[d69e54]"></a>TEMP_MONITOR</STRONG> (ARM, 692 bytes, Stack size 40 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = TEMP_MONITOR &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[d60e6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[d69620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[d69b84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[d69bc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[d69bfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[d69c38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[d69c74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[d69cb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[d69cec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[d6ad54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_read
<LI><a href="#[d6b2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendSMS
<LI><a href="#[d6bdbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_putstring
<LI><a href="#[d6bf60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
<LI><a href="#[d6c9b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTSend
</UL>
<BR>[Called By]<UL><LI><a href="#[d69d64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d69e18]"></a>VOLTAGE_CHECK</STRONG> (ARM, 408 bytes, Stack size 40 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = VOLTAGE_CHECK &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[d60e6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[d69620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[d69b84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[d69bfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[d69c38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[d69c74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[d69cb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[d69cec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[d6ad54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_read
<LI><a href="#[d6b2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendSMS
<LI><a href="#[d6bd08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear
<LI><a href="#[d6bdbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_putstring
<LI><a href="#[d6bf60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
</UL>
<BR>[Called By]<UL><LI><a href="#[d69d64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d69ddc]"></a>FIRE_CHECK</STRONG> (ARM, 184 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = FIRE_CHECK &rArr; lcd_putstring &rArr; lcd_gotoxy &rArr; lcd_command_write &rArr; wait_lcd
</UL>
<BR>[Calls]<UL><LI><a href="#[d69620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[d6b2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendSMS
<LI><a href="#[d6bdbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_putstring
<LI><a href="#[d6bf60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
</UL>
<BR>[Called By]<UL><LI><a href="#[d69d64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d69da0]"></a>GAS_CHECK</STRONG> (ARM, 400 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = GAS_CHECK &rArr; lcd_putstring &rArr; lcd_gotoxy &rArr; lcd_command_write &rArr; wait_lcd
</UL>
<BR>[Calls]<UL><LI><a href="#[d69530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[d6b2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendSMS
<LI><a href="#[d6bdbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_putstring
<LI><a href="#[d6bf60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
</UL>
<BR>[Called By]<UL><LI><a href="#[d69d64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d69d64]"></a>main</STRONG> (ARM, 232 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = main &rArr; VOLTAGE_CHECK &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[d69da0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAS_CHECK
<LI><a href="#[d69ddc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIRE_CHECK
<LI><a href="#[d69e18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VOLTAGE_CHECK
<LI><a href="#[d69e54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEMP_MONITOR
<LI><a href="#[d6adcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_adc0
<LI><a href="#[d6b2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendSMS
<LI><a href="#[d6b2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;intGsm
<LI><a href="#[d6b81c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_init
<LI><a href="#[d6b8d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_init
<LI><a href="#[d6bd08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear
<LI><a href="#[d6bd80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_lcd
<LI><a href="#[d6bdbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_putstring
<LI><a href="#[d6bee8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_command_write
<LI><a href="#[d6bf60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
<LI><a href="#[d6c410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_VIC
<LI><a href="#[d6c9ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry7.o(.ARM.Collect$$$$00000007)
</UL>
<P><STRONG><a name="[d69620]"></a>strcat</STRONG> (ARM, 44 bytes, Stack size 0 bytes, strcat.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d69ddc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIRE_CHECK
<LI><a href="#[d69e18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VOLTAGE_CHECK
<LI><a href="#[d69e54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEMP_MONITOR
</UL>

<P><STRONG><a name="[d69530]"></a>strcpy</STRONG> (ARM, 28 bytes, Stack size 0 bytes, strcpy.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d69da0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GAS_CHECK
</UL>

<P><STRONG><a name="[d69bc0]"></a>__aeabi_fmul</STRONG> (ARM, 136 bytes, Stack size 0 bytes, fmul.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d69e54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEMP_MONITOR
</UL>

<P><STRONG><a name="[d69c38]"></a>__aeabi_dmul</STRONG> (ARM, 332 bytes, Stack size 64 bytes, dmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[d5fc9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[d613d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[d69e18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VOLTAGE_CHECK
<LI><a href="#[d69e54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEMP_MONITOR
</UL>

<P><STRONG><a name="[d69c74]"></a>__aeabi_ddiv</STRONG> (ARM, 404 bytes, Stack size 56 bytes, ddiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = __aeabi_ddiv &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[d5fbac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[d613d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[d69e18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VOLTAGE_CHECK
<LI><a href="#[d69e54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEMP_MONITOR
</UL>

<P><STRONG><a name="[d69b84]"></a>__aeabi_i2d</STRONG> (ARM, 52 bytes, Stack size 16 bytes, dflti.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = __aeabi_i2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[d5fc9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[d69e18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VOLTAGE_CHECK
<LI><a href="#[d69e54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEMP_MONITOR
</UL>

<P><STRONG><a name="[d69bfc]"></a>__aeabi_f2d</STRONG> (ARM, 56 bytes, Stack size 0 bytes, f2d.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d69e18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VOLTAGE_CHECK
<LI><a href="#[d69e54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEMP_MONITOR
</UL>

<P><STRONG><a name="[d69cb0]"></a>__aeabi_d2f</STRONG> (ARM, 96 bytes, Stack size 16 bytes, d2f.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_d2f
</UL>
<BR>[Calls]<UL><LI><a href="#[d5f954]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[d69e18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VOLTAGE_CHECK
<LI><a href="#[d69e54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEMP_MONITOR
</UL>

<P><STRONG><a name="[d69cec]"></a>__aeabi_cfrcmple</STRONG> (ARM, 24 bytes, Stack size 0 bytes, cfrcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d69e18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VOLTAGE_CHECK
<LI><a href="#[d69e54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEMP_MONITOR
</UL>

<P><STRONG><a name="[d5f24c]"></a>__aeabi_uidiv</STRONG> (ARM, 0 bytes, Stack size 8 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[d5f210]"></a>__aeabi_uidivmod</STRONG> (ARM, 60 bytes, Stack size 8 bytes, uidiv.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[d61394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[d5f120]"></a>__aeabi_uldivmod</STRONG> (ARM, 144 bytes, Stack size 32 bytes, uldiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[145f0f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[145f220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[d61394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
<LI><a href="#[d613d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[145fa54]"></a>__I$use$fp</STRONG> (ARM, 0 bytes, Stack size 0 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[d5f954]"></a>_float_round</STRONG> (ARM, 24 bytes, Stack size 0 bytes, fepilogue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d69cb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>

<P><STRONG><a name="[145f964]"></a>_float_epilogue</STRONG> (ARM, 188 bytes, Stack size 4 bytes, fepilogue.o(.text), UNUSED)

<P><STRONG><a name="[d5fbac]"></a>_double_round</STRONG> (ARM, 80 bytes, Stack size 20 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = _double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[d5fc9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[d60854]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[d69c74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
</UL>

<P><STRONG><a name="[d5fc9c]"></a>_double_epilogue</STRONG> (ARM, 304 bytes, Stack size 32 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[d5fbac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[145f0f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[145f220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[145f7fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_clz
</UL>
<BR>[Called By]<UL><LI><a href="#[d60854]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[d69b84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[d69c38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
</UL>

<P><STRONG><a name="[d60854]"></a>__aeabi_dadd</STRONG> (ARM, 500 bytes, Stack size 72 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d5fbac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[d5fc9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[145efc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
<LI><a href="#[145f220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[d613d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[145f6d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[145f70c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
</UL>

<P><STRONG><a name="[145f70c]"></a>__aeabi_dsub</STRONG> (ARM, 8 bytes, Stack size 0 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d60854]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[145f6d0]"></a>__aeabi_drsub</STRONG> (ARM, 8 bytes, Stack size 0 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d60854]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[d60890]"></a>__aeabi_d2ulz</STRONG> (ARM, 68 bytes, Stack size 0 bytes, dfixul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[145f0f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[145f220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[d613d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[d608cc]"></a>__aeabi_cdrcmple</STRONG> (ARM, 112 bytes, Stack size 0 bytes, cdrcmple.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[d613d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[145f43c]"></a>__scatterload</STRONG> (ARM, 40 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d5f648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[d5f684]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[145f400]"></a>__scatterload_rt2</STRONG> (ARM, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[145f220]"></a>__aeabi_llsl</STRONG> (ARM, 40 bytes, Stack size 0 bytes, llshl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d5f120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[d5fc9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[d60854]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[d60890]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>

<P><STRONG><a name="[145f1e4]"></a>_ll_shift_l</STRONG> (ARM, 0 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[145f0f4]"></a>__aeabi_llsr</STRONG> (ARM, 36 bytes, Stack size 0 bytes, llushr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d5f120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[d5fc9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[d60890]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>

<P><STRONG><a name="[145f0b8]"></a>_ll_ushift_r</STRONG> (ARM, 0 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[145efc8]"></a>__aeabi_lasr</STRONG> (ARM, 40 bytes, Stack size 0 bytes, llsshr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[d60854]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[145ef8c]"></a>_ll_sshift_r</STRONG> (ARM, 0 bytes, Stack size 0 bytes, llsshr.o(.text), UNUSED)

<P><STRONG><a name="[d60ee4]"></a>__0sprintf</STRONG> (ARM, 56 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d612a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[d61394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[d60ea8]"></a>__1sprintf</STRONG> (ARM, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)

<P><STRONG><a name="[d60e6c]"></a>__2sprintf</STRONG> (ARM, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[d69e18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VOLTAGE_CHECK
<LI><a href="#[d69e54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEMP_MONITOR
</UL>

<P><STRONG><a name="[d60e30]"></a>__c89sprintf</STRONG> (ARM, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)

<P><STRONG><a name="[d60df4]"></a>sprintf</STRONG> (ARM, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)

<P><STRONG><a name="[145f7fc]"></a>__ARM_clz</STRONG> (ARM, 68 bytes, Stack size 0 bytes, depilogue.o(i.__ARM_clz))
<BR><BR>[Called By]<UL><LI><a href="#[d5fc9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[145ec08]"></a>__scatterload_copy</STRONG> (ARM, 24 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[145ec08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[145ec08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>

<P><STRONG><a name="[145ebcc]"></a>__scatterload_null</STRONG> (ARM, 4 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[145eb90]"></a>__scatterload_zeroinit</STRONG> (ARM, 24 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[d6d8b0]"></a>Undef_Handler</STRONG> (ARM, 4 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[d6d8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Undef_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[d6d8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Undef_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[d6d874]"></a>SWI_Handler</STRONG> (ARM, 4 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[d6d874]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[d6d874]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[d6d838]"></a>PAbt_Handler</STRONG> (ARM, 4 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[d6d838]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PAbt_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[d6d838]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PAbt_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[d6d7fc]"></a>DAbt_Handler</STRONG> (ARM, 4 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[d6d7fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAbt_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[d6d7fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAbt_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[d6d7c0]"></a>IRQ_Handler</STRONG> (ARM, 4 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[d6d7c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[d6d7c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[d6d784]"></a>FIQ_Handler</STRONG> (ARM, 4 bytes, Stack size unknown bytes, startup.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[d6d784]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIQ_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[d6d784]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FIQ_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup.o(RESET)
</UL>
<P><STRONG><a name="[d613d0]"></a>_fp_digits</STRONG> (ARM, 612 bytes, Stack size 64 bytes, printfa.o(i._fp_digits), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d5f120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[d60854]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[d60890]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
<LI><a href="#[d608cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[d69c38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[d69c74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[d61394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[d61394]"></a>_printf_core</STRONG> (ARM, 2724 bytes, Stack size 152 bytes, printfa.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d5f120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[d5f210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[d6131c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[d61358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[d613d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>
<BR>[Called By]<UL><LI><a href="#[d60ee4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf
</UL>

<P><STRONG><a name="[d61358]"></a>_printf_post_padding</STRONG> (ARM, 68 bytes, Stack size 24 bytes, printfa.o(i._printf_post_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[d61394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[d6131c]"></a>_printf_pre_padding</STRONG> (ARM, 80 bytes, Stack size 24 bytes, printfa.o(i._printf_pre_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[d61394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[d612a4]"></a>_sputc</STRONG> (ARM, 20 bytes, Stack size 0 bytes, printfa.o(i._sputc))
<BR><BR>[Called By]<UL><LI><a href="#[d60ee4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printfa.o(i.__0sprintf)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
